{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","fdamount","setFdAmount","interest","setInterest","period","setPeriod","result","setResult","className","type","value","onChange","e","target","step","style","paddingTop","onClick","quaterly","tempAmount","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAyEeA,MApEf,WAGE,IAAI,EAA0BC,qBAA9B,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,qBAA5B,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA4BN,qBAA5B,mBAAOO,EAAP,KAAeC,EAAf,KAkBA,OACE,sBAAKC,UAAU,MAAf,UACE,0DAEA,gCACE,gCACE,2CACA,uBACEC,KAAK,SACLC,MAAOV,EACPW,SAAU,SAAAC,GAAC,OAAIX,GAAaW,EAAEC,OAAOH,aAIzC,gCACE,kDACA,uBACED,KAAK,SACLK,KAAK,MACLJ,MAAOR,EACPS,SAAU,SAAAC,GAAC,OAAIT,GAAaS,EAAEC,OAAOH,aAIzC,gCACE,4DACA,uBACED,KAAK,SACLC,MAAON,EACPO,SAAU,SAAAC,GAAC,OAAIP,GAAWO,EAAEC,OAAOH,gBAKzC,qBAAKK,MAAO,CAACC,WAAW,QAAxB,SACE,wBAAQC,QAlDd,WAKE,IAJA,IAAIC,EAAW,EACXC,EAAa,EAGXD,GAAYd,GAGnBJ,EADAmB,EAAanB,EADAA,EAAWE,EAAS,EAAE,IAGnCgB,GAAsB,EAGrBX,EAAUa,KAAKC,MAAMF,KAsCjB,2BAIF,oDAAuBb,SCxDdgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c7749538.chunk.js","sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\n//import NumericInput from 'react-numeric-input';\n\nfunction App() {\n\n  // State variables\n  var [fdamount, setFdAmount] = useState();\n  const [interest, setInterest] = useState();\n  const [period, setPeriod] = useState();\n  const [result, setResult] = useState();\n\n  // Function to calc amount\n  function calculateTotal() {\n    var quaterly = 3;\n    var tempAmount = 0;\n    var calcAmount = 0;\n\n    while(quaterly <= period) {\n\t\t\tcalcAmount = fdamount * interest/4/100;\n\t\t\ttempAmount = fdamount + calcAmount;\n\t\t\tfdamount = tempAmount;\n\t\t\tquaterly = quaterly + 3;\n\t\t}\n\n    setResult(Math.round(tempAmount));\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Fixed Deposit Calculator</h1>\n\n      <div>\n        <div>\n          <h3>Principal</h3>\n          <input\n            type=\"number\"\n            value={fdamount}\n            onChange={e => setFdAmount(+e.target.value)}\n          />\n        </div>\n        \n        <div>\n          <h3>Rate Of Interest</h3>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            value={interest}\n            onChange={e => setInterest(+e.target.value)}\n          />\n        </div>\n\n        <div>\n          <h3>Period of deposit (Months)</h3>\n          <input\n            type=\"number\"\n            value={period}\n            onChange={e => setPeriod(+e.target.value)}\n          />\n        </div>\n      </div>\n\n      <div style={{paddingTop:'10px'}}>\n        <button onClick={calculateTotal}> Calculate </button>\n      </div>\n      \n\n      <h2>Maturity Amount : {result}</h2>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}